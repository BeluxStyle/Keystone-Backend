// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/myprisma"
}

model Admin {
  id                   String      @id @default(cuid())
  name                 String      @default("")
  agente               Int?
  from_Comunidad_admin Comunidad[] @relation("Comunidad_admin")
  from_Edificio_admin  Edificio[]  @relation("Edificio_admin")
}

model Categoria {
  id                          String         @id @default(cuid())
  name                        String         @default("")
  from_Marca_categoria        Marca[]        @relation("Marca_categoria")
  from_Producto_categoria     Producto[]     @relation("Producto_categoria")
  from_Subcategoria_categoria Subcategoria[] @relation("Subcategoria_categoria")
}

model Comunidad {
  id                      String     @id @default(cuid())
  name                    String     @default("")
  direccion               String     @default("")
  cp                      Int?
  admin                   Admin?     @relation("Comunidad_admin", fields: [adminId], references: [id])
  adminId                 String?    @map("admin")
  cif                     String     @default("")
  author                  User?      @relation("Comunidad_author", fields: [authorId], references: [id])
  authorId                String?    @map("author")
  createdAt               DateTime?  @default(now())
  updatedAt               DateTime?  @default(now())
  edificios               Edificio[] @relation("Edificio_comunidad")
  from_Contacto_comunidad Contacto[] @relation("Contacto_comunidad")
  from_Aviso_comunidad    Aviso[]    @relation("Aviso_comunidad")

  @@index([adminId])
  @@index([authorId])
}

model Contacto {
  id          String     @id @default(cuid())
  name        String     @default("")
  telefono    String     @default("")
  piso        String     @default("")
  edificio    Edificio?  @relation("Contacto_edificio", fields: [edificioId], references: [id])
  edificioId  String?    @map("edificio")
  comunidad   Comunidad? @relation("Contacto_comunidad", fields: [comunidadId], references: [id])
  comunidadId String?    @map("comunidad")
  tipo        String?    @default("vecino")

  @@index([edificioId])
  @@index([comunidadId])
}

model Documento {
  id                    String    @id @default(cuid())
  name                  String    @default("")
  archivo               String    @default("")
  createdAt             DateTime? @default(now())
  updatedAt             DateTime? @default(now())
  from_Manual_documento Manual[]  @relation("Manual_documento")
}

model Edificio {
  id                            String            @id @default(cuid())
  name                          String            @default("")
  comunidad                     Comunidad?        @relation("Edificio_comunidad", fields: [comunidadId], references: [id])
  comunidadId                   String?           @map("comunidad")
  instalaciones                 Instalacion[]     @relation("Instalacion_edificio")
  tipo                          String?           @default("bloque")
  admin                         Admin?            @relation("Edificio_admin", fields: [adminId], references: [id])
  adminId                       String?           @map("admin")
  from_Contacto_edificio        Contacto[]        @relation("Contacto_edificio")
  from_EdificioComment_edificio EdificioComment[] @relation("EdificioComment_edificio")

  @@index([comunidadId])
  @@index([adminId])
}

model Elemento {
  id                            String            @id @default(cuid())
  producto                      Producto?         @relation("Elemento_producto", fields: [productoId], references: [id])
  productoId                    String?           @map("producto")
  estado                        String?           @default("ok")
  instalacion                   Instalacion?      @relation("Elemento_instalacion", fields: [instalacionId], references: [id])
  instalacionId                 String?           @map("instalacion")
  cantidad                      Int?              @default(1)
  observaciones                 String            @default("")
  createdAt                     DateTime?         @default(now())
  updatedAt                     DateTime?         @default(now())
  group                         String?           @default("otros")
  from_Contraincendio_elemento  Contraincendio[]  @relation("Contraincendio_elemento")
  from_Inst_Otro_elemento       Inst_Otro[]       @relation("Inst_Otro_elemento")
  from_Reparacion_elemento      Reparacion[]      @relation("Reparacion_elemento")
  from_ElementoComment_elemento ElementoComment[] @relation("ElementoComment_elemento")

  @@index([productoId])
  @@index([instalacionId])
}

model Empresa {
  id                               String                @id @default(cuid())
  name                             String                @default("")
  logo                             String                @default("")
  cif                              String                @default("")
  from_User_empresa                User[]                @relation("User_empresa")
  from_SubscriptionEmpresa_empresa SubscriptionEmpresa[] @relation("SubscriptionEmpresa_empresa")
}

model Imagen {
  id                   String     @id @default(cuid())
  archivo              String     @default("")
  createdAt            DateTime?  @default(now())
  updatedAt            DateTime?  @default(now())
  from_Producto_imagen Producto[] @relation("Producto_imagen")
}

model Manual {
  id          String     @id @default(cuid())
  producto    Producto?  @relation("Manual_producto", fields: [productoId], references: [id])
  productoId  String?    @map("producto")
  documento   Documento? @relation("Manual_documento", fields: [documentoId], references: [id])
  documentoId String?    @map("documento")
  createdAt   DateTime?  @default(now())
  updatedAt   DateTime?  @default(now())

  @@index([productoId])
  @@index([documentoId])
}

model Marca {
  id                  String     @id @default(cuid())
  name                String     @default("")
  categoria           Categoria? @relation("Marca_categoria", fields: [categoriaId], references: [id])
  categoriaId         String?    @map("categoria")
  from_Producto_marca Producto[] @relation("Producto_marca")

  @@index([categoriaId])
}

model Instalacion {
  id          String               @id @default(cuid())
  tipo        String?              @default("portero")
  descripcion String               @default("")
  edificio    Edificio?            @relation("Instalacion_edificio", fields: [edificioId], references: [id])
  edificioId  String?              @map("edificio")
  elementos   Elemento[]           @relation("Elemento_instalacion")
  comentarios InstalacionComment[] @relation("InstalacionComment_instalacion")

  @@index([edificioId])
}

model Contraincendio {
  id                 String    @id @default(cuid())
  serial_number      String    @default("")
  date_made          DateTime?
  date_retimbrado    DateTime?
  date_last_revision DateTime?
  date_next_revision DateTime?
  tecnico            User?     @relation("Contraincendio_tecnico", fields: [tecnicoId], references: [id])
  tecnicoId          String?   @map("tecnico")
  descripcion        String    @default("")
  elemento           Elemento? @relation("Contraincendio_elemento", fields: [elementoId], references: [id])
  elementoId         String?   @map("elemento")

  @@index([tecnicoId])
  @@index([elementoId])
}

model Inst_Otro {
  id                 String    @id @default(cuid())
  serial_number      String    @default("")
  date_made          DateTime?
  date_last_revision DateTime?
  date_next_revision DateTime?
  elemento           Elemento? @relation("Inst_Otro_elemento", fields: [elementoId], references: [id])
  elementoId         String?   @map("elemento")
  tecnico            User?     @relation("Inst_Otro_tecnico", fields: [tecnicoId], references: [id])
  tecnicoId          String?   @map("tecnico")

  @@index([elementoId])
  @@index([tecnicoId])
}

model Reparacion {
  id          String    @id @default(cuid())
  date_repair DateTime?
  tecnico     User?     @relation("Reparacion_tecnico", fields: [tecnicoId], references: [id])
  tecnicoId   String?   @map("tecnico")
  descripcion String    @default("")
  elemento    Elemento? @relation("Reparacion_elemento", fields: [elementoId], references: [id])
  elementoId  String?   @map("elemento")

  @@index([tecnicoId])
  @@index([elementoId])
}

model Producto {
  id                     String        @id @default(cuid())
  ref                    String        @default("")
  descripcion            String        @default("")
  categoria              Categoria?    @relation("Producto_categoria", fields: [categoriaId], references: [id])
  categoriaId            String?       @map("categoria")
  subcategoria           Subcategoria? @relation("Producto_subcategoria", fields: [subcategoriaId], references: [id])
  subcategoriaId         String?       @map("subcategoria")
  marca                  Marca?        @relation("Producto_marca", fields: [marcaId], references: [id])
  marcaId                String?       @map("marca")
  precio                 Int?
  ean                    String        @default("")
  imagen                 Imagen?       @relation("Producto_imagen", fields: [imagenId], references: [id])
  imagenId               String?       @map("imagen")
  createdAt              DateTime?     @default(now())
  updatedAt              DateTime?     @default(now())
  from_Elemento_producto Elemento[]    @relation("Elemento_producto")
  from_Manual_producto   Manual[]      @relation("Manual_producto")

  @@index([categoriaId])
  @@index([subcategoriaId])
  @@index([marcaId])
  @@index([imagenId])
}

model Rol {
  id        String    @id @default(cuid())
  name      String    @default("")
  level     Int?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  deletedAt DateTime?
  users     User[]    @relation("User_rol")
}

model Subcategoria {
  id                         String     @id @default(cuid())
  name                       String     @default("")
  categoria                  Categoria? @relation("Subcategoria_categoria", fields: [categoriaId], references: [id])
  categoriaId                String?    @map("categoria")
  from_Producto_subcategoria Producto[] @relation("Producto_subcategoria")

  @@index([categoriaId])
}

model Telefonillo {
  id      String @id @default(cuid())
  modelo  String @default("")
  abrep   String @default("")
  micro   String @default("")
  comun   String @default("")
  altavoz String @default("")
  llamada String @default("")
}

model User {
  id                             String               @id @default(cuid())
  name                           String               @default("")
  email                          String               @unique @default("")
  password                       String?
  googleId                       String               @unique @default("")
  photo                          String               @default("")
  lastLogin                      DateTime?
  createdAt                      DateTime?            @default(now())
  updatedAt                      DateTime?            @default(now())
  profile                        Profile?             @relation("Profile_user")
  empresa                        Empresa?             @relation("User_empresa", fields: [empresaId], references: [id])
  empresaId                      String?              @map("empresa")
  rol                            Rol?                 @relation("User_rol", fields: [rolId], references: [id])
  rolId                          String?              @map("rol")
  tecnicoNum                     Int?
  token                          String               @default("")
  from_Comunidad_author          Comunidad[]          @relation("Comunidad_author")
  from_Contraincendio_tecnico    Contraincendio[]     @relation("Contraincendio_tecnico")
  from_Inst_Otro_tecnico         Inst_Otro[]          @relation("Inst_Otro_tecnico")
  from_Reparacion_tecnico        Reparacion[]         @relation("Reparacion_tecnico")
  from_Aviso_tecnico             Aviso[]              @relation("Aviso_tecnico")
  from_History_tecnico           History[]            @relation("History_tecnico")
  from_EdificioComment_author    EdificioComment[]    @relation("EdificioComment_author")
  from_AvisoComment_author       AvisoComment[]       @relation("AvisoComment_author")
  from_ElementoComment_author    ElementoComment[]    @relation("ElementoComment_author")
  from_InstalacionComment_author InstalacionComment[] @relation("InstalacionComment_author")

  @@index([empresaId])
  @@index([rolId])
}

model Aviso {
  id                      String         @id @default(cuid())
  numero                  String         @default("")
  comunidad               Comunidad?     @relation("Aviso_comunidad", fields: [comunidadId], references: [id])
  comunidadId             String?        @map("comunidad")
  tecnico                 User?          @relation("Aviso_tecnico", fields: [tecnicoId], references: [id])
  tecnicoId               String?        @map("tecnico")
  solucion                String         @default("")
  observaciones           String         @default("")
  status                  String?        @default("Pendiente")
  createdAt               DateTime?      @default(now())
  updatedAt               DateTime?      @default(now())
  from_History_aviso      History[]      @relation("History_aviso")
  from_Adjunto_aviso      Adjunto[]      @relation("Adjunto_aviso")
  from_AvisoComment_aviso AvisoComment[] @relation("AvisoComment_aviso")

  @@index([comunidadId])
  @@index([tecnicoId])
}

model History {
  id            String    @id @default(cuid())
  aviso         Aviso?    @relation("History_aviso", fields: [avisoId], references: [id])
  avisoId       String?   @map("aviso")
  tecnico       User?     @relation("History_tecnico", fields: [tecnicoId], references: [id])
  tecnicoId     String?   @map("tecnico")
  status        String?   @default("Pendiente")
  observaciones String    @default("")
  createdAt     DateTime? @default(now())
  updatedAt     DateTime? @default(now())

  @@index([avisoId])
  @@index([tecnicoId])
}

model Adjunto {
  id        String    @id @default(cuid())
  aviso     Aviso?    @relation("Adjunto_aviso", fields: [avisoId], references: [id])
  avisoId   String?   @map("aviso")
  url       String    @default("")
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  @@index([avisoId])
}

model Profile {
  id        String  @id @default(cuid())
  user      User?   @relation("Profile_user", fields: [userId], references: [id])
  userId    String? @unique @map("user")
  bio       String  @default("")
  photo     String  @default("")
  phone     String  @default("")
  workPhone String  @default("")
}

model EdificioComment {
  id         String    @id @default(cuid())
  author     User?     @relation("EdificioComment_author", fields: [authorId], references: [id])
  authorId   String?   @map("author")
  edificio   Edificio? @relation("EdificioComment_edificio", fields: [edificioId], references: [id])
  edificioId String?   @map("edificio")
  comentario String    @default("")
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @default(now())

  @@index([authorId])
  @@index([edificioId])
}

model AvisoComment {
  id         String    @id @default(cuid())
  author     User?     @relation("AvisoComment_author", fields: [authorId], references: [id])
  authorId   String?   @map("author")
  aviso      Aviso?    @relation("AvisoComment_aviso", fields: [avisoId], references: [id])
  avisoId    String?   @map("aviso")
  comentario String    @default("")
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @default(now())

  @@index([authorId])
  @@index([avisoId])
}

model ElementoComment {
  id         String    @id @default(cuid())
  author     User?     @relation("ElementoComment_author", fields: [authorId], references: [id])
  authorId   String?   @map("author")
  elemento   Elemento? @relation("ElementoComment_elemento", fields: [elementoId], references: [id])
  elementoId String?   @map("elemento")
  comentario String    @default("")
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @default(now())

  @@index([authorId])
  @@index([elementoId])
}

model InstalacionComment {
  id            String       @id @default(cuid())
  author        User?        @relation("InstalacionComment_author", fields: [authorId], references: [id])
  authorId      String?      @map("author")
  instalacion   Instalacion? @relation("InstalacionComment_instalacion", fields: [instalacionId], references: [id])
  instalacionId String?      @map("instalacion")
  comentario    String       @default("")
  createdAt     DateTime?    @default(now())
  updatedAt     DateTime?    @default(now())

  @@index([authorId])
  @@index([instalacionId])
}

model Subcription {
  id                                    String                @id @default(cuid())
  name                                  String                @default("")
  limits                                Int?
  price                                 Int?
  description                           String                @default("")
  createdAt                             DateTime?             @default(now())
  updatedAt                             DateTime?             @default(now())
  from_SubscriptionEmpresa_subscription SubscriptionEmpresa[] @relation("SubscriptionEmpresa_subscription")
}

model SubscriptionEmpresa {
  id             String       @id @default(cuid())
  empresa        Empresa?     @relation("SubscriptionEmpresa_empresa", fields: [empresaId], references: [id])
  empresaId      String?      @map("empresa")
  subscription   Subcription? @relation("SubscriptionEmpresa_subscription", fields: [subscriptionId], references: [id])
  subscriptionId String?      @map("subscription")
  expiration     DateTime?
  status         String?      @default("active")
  createdAt      DateTime?    @default(now())
  updatedAt      DateTime?    @default(now())

  @@index([empresaId])
  @@index([subscriptionId])
}

model Config {
  id        String    @id @default(cuid())
  key       String    @default("")
  value     String    @default("")
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
}
