# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type Admin {
  id: ID!
  name: String
  agente: Int
}

input AdminWhereUniqueInput {
  id: ID
}

input AdminWhereInput {
  AND: [AdminWhereInput!]
  OR: [AdminWhereInput!]
  NOT: [AdminWhereInput!]
  id: IDFilter
  name: StringFilter
  agente: IntNullableFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntNullableFilter
}

input AdminOrderByInput {
  id: OrderDirection
  name: OrderDirection
  agente: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input AdminUpdateInput {
  name: String
  agente: Int
}

input AdminUpdateArgs {
  where: AdminWhereUniqueInput!
  data: AdminUpdateInput!
}

input AdminCreateInput {
  name: String
  agente: Int
}

type Categoria {
  id: ID!
  name: String
}

input CategoriaWhereUniqueInput {
  id: ID
}

input CategoriaWhereInput {
  AND: [CategoriaWhereInput!]
  OR: [CategoriaWhereInput!]
  NOT: [CategoriaWhereInput!]
  id: IDFilter
  name: StringFilter
}

input CategoriaOrderByInput {
  id: OrderDirection
  name: OrderDirection
}

input CategoriaUpdateInput {
  name: String
}

input CategoriaUpdateArgs {
  where: CategoriaWhereUniqueInput!
  data: CategoriaUpdateInput!
}

input CategoriaCreateInput {
  name: String
}

type Comunidad {
  id: ID!
  name: String
  direccion: String
  cp: Int
  admin: Admin
  cif: String
  author: User
  createdAt: DateTime
  updatedAt: DateTime
  edificios(where: EdificioWhereInput! = {}, orderBy: [EdificioOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: EdificioWhereUniqueInput): [Edificio!]
  edificiosCount(where: EdificioWhereInput! = {}): Int
}

scalar DateTime @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input ComunidadWhereUniqueInput {
  id: ID
}

input ComunidadWhereInput {
  AND: [ComunidadWhereInput!]
  OR: [ComunidadWhereInput!]
  NOT: [ComunidadWhereInput!]
  id: IDFilter
  name: StringFilter
  direccion: StringFilter
  cp: IntNullableFilter
  admin: AdminWhereInput
  cif: StringFilter
  author: UserWhereInput
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
  edificios: EdificioManyRelationFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input EdificioManyRelationFilter {
  every: EdificioWhereInput
  some: EdificioWhereInput
  none: EdificioWhereInput
}

input ComunidadOrderByInput {
  id: OrderDirection
  name: OrderDirection
  direccion: OrderDirection
  cp: OrderDirection
  cif: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input ComunidadUpdateInput {
  name: String
  direccion: String
  cp: Int
  admin: AdminRelateToOneForUpdateInput
  cif: String
  author: UserRelateToOneForUpdateInput
  createdAt: DateTime
  updatedAt: DateTime
  edificios: EdificioRelateToManyForUpdateInput
}

input AdminRelateToOneForUpdateInput {
  create: AdminCreateInput
  connect: AdminWhereUniqueInput
  disconnect: Boolean
}

input UserRelateToOneForUpdateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
}

input EdificioRelateToManyForUpdateInput {
  disconnect: [EdificioWhereUniqueInput!]
  set: [EdificioWhereUniqueInput!]
  create: [EdificioCreateInput!]
  connect: [EdificioWhereUniqueInput!]
}

input ComunidadUpdateArgs {
  where: ComunidadWhereUniqueInput!
  data: ComunidadUpdateInput!
}

input ComunidadCreateInput {
  name: String
  direccion: String
  cp: Int
  admin: AdminRelateToOneForCreateInput
  cif: String
  author: UserRelateToOneForCreateInput
  createdAt: DateTime
  updatedAt: DateTime
  edificios: EdificioRelateToManyForCreateInput
}

input AdminRelateToOneForCreateInput {
  create: AdminCreateInput
  connect: AdminWhereUniqueInput
}

input UserRelateToOneForCreateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input EdificioRelateToManyForCreateInput {
  create: [EdificioCreateInput!]
  connect: [EdificioWhereUniqueInput!]
}

type Contacto {
  id: ID!
  name: String
  telefono: String
  piso: String
  edificio: Edificio
  comunidad: Comunidad
  tipo: String
}

input ContactoWhereUniqueInput {
  id: ID
}

input ContactoWhereInput {
  AND: [ContactoWhereInput!]
  OR: [ContactoWhereInput!]
  NOT: [ContactoWhereInput!]
  id: IDFilter
  name: StringFilter
  telefono: StringFilter
  piso: StringFilter
  edificio: EdificioWhereInput
  comunidad: ComunidadWhereInput
  tipo: StringNullableFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: StringNullableFilter
}

input ContactoOrderByInput {
  id: OrderDirection
  name: OrderDirection
  telefono: OrderDirection
  piso: OrderDirection
  tipo: OrderDirection
}

input ContactoUpdateInput {
  name: String
  telefono: String
  piso: String
  edificio: EdificioRelateToOneForUpdateInput
  comunidad: ComunidadRelateToOneForUpdateInput
  tipo: String
}

input EdificioRelateToOneForUpdateInput {
  create: EdificioCreateInput
  connect: EdificioWhereUniqueInput
  disconnect: Boolean
}

input ComunidadRelateToOneForUpdateInput {
  create: ComunidadCreateInput
  connect: ComunidadWhereUniqueInput
  disconnect: Boolean
}

input ContactoUpdateArgs {
  where: ContactoWhereUniqueInput!
  data: ContactoUpdateInput!
}

input ContactoCreateInput {
  name: String
  telefono: String
  piso: String
  edificio: EdificioRelateToOneForCreateInput
  comunidad: ComunidadRelateToOneForCreateInput
  tipo: String
}

input EdificioRelateToOneForCreateInput {
  create: EdificioCreateInput
  connect: EdificioWhereUniqueInput
}

input ComunidadRelateToOneForCreateInput {
  create: ComunidadCreateInput
  connect: ComunidadWhereUniqueInput
}

type Documento {
  id: ID!
  name: String
  archivo: String
  createdAt: DateTime
  updatedAt: DateTime
}

input DocumentoWhereUniqueInput {
  id: ID
}

input DocumentoWhereInput {
  AND: [DocumentoWhereInput!]
  OR: [DocumentoWhereInput!]
  NOT: [DocumentoWhereInput!]
  id: IDFilter
  name: StringFilter
  archivo: StringFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input DocumentoOrderByInput {
  id: OrderDirection
  name: OrderDirection
  archivo: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input DocumentoUpdateInput {
  name: String
  archivo: String
  createdAt: DateTime
  updatedAt: DateTime
}

input DocumentoUpdateArgs {
  where: DocumentoWhereUniqueInput!
  data: DocumentoUpdateInput!
}

input DocumentoCreateInput {
  name: String
  archivo: String
  createdAt: DateTime
  updatedAt: DateTime
}

type Edificio {
  id: ID!
  name: String
  comunidad: Comunidad
  instalaciones(where: InstalacionWhereInput! = {}, orderBy: [InstalacionOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: InstalacionWhereUniqueInput): [Instalacion!]
  instalacionesCount(where: InstalacionWhereInput! = {}): Int
  tipo: String
  admin: Admin
  label: String
}

input EdificioWhereUniqueInput {
  id: ID
}

input EdificioWhereInput {
  AND: [EdificioWhereInput!]
  OR: [EdificioWhereInput!]
  NOT: [EdificioWhereInput!]
  id: IDFilter
  name: StringFilter
  comunidad: ComunidadWhereInput
  instalaciones: InstalacionManyRelationFilter
  tipo: StringNullableFilter
  admin: AdminWhereInput
}

input InstalacionManyRelationFilter {
  every: InstalacionWhereInput
  some: InstalacionWhereInput
  none: InstalacionWhereInput
}

input EdificioOrderByInput {
  id: OrderDirection
  name: OrderDirection
  tipo: OrderDirection
}

input EdificioUpdateInput {
  name: String
  comunidad: ComunidadRelateToOneForUpdateInput
  instalaciones: InstalacionRelateToManyForUpdateInput
  tipo: String
  admin: AdminRelateToOneForUpdateInput
}

input InstalacionRelateToManyForUpdateInput {
  disconnect: [InstalacionWhereUniqueInput!]
  set: [InstalacionWhereUniqueInput!]
  create: [InstalacionCreateInput!]
  connect: [InstalacionWhereUniqueInput!]
}

input EdificioUpdateArgs {
  where: EdificioWhereUniqueInput!
  data: EdificioUpdateInput!
}

input EdificioCreateInput {
  name: String
  comunidad: ComunidadRelateToOneForCreateInput
  instalaciones: InstalacionRelateToManyForCreateInput
  tipo: String
  admin: AdminRelateToOneForCreateInput
}

input InstalacionRelateToManyForCreateInput {
  create: [InstalacionCreateInput!]
  connect: [InstalacionWhereUniqueInput!]
}

type Elemento {
  id: ID!
  producto: Producto
  estado: String
  instalacion: Instalacion
  cantidad: Int
  observaciones: String
  createdAt: DateTime
  updatedAt: DateTime
  group: String
}

input ElementoWhereUniqueInput {
  id: ID
}

input ElementoWhereInput {
  AND: [ElementoWhereInput!]
  OR: [ElementoWhereInput!]
  NOT: [ElementoWhereInput!]
  id: IDFilter
  producto: ProductoWhereInput
  estado: StringNullableFilter
  instalacion: InstalacionWhereInput
  cantidad: IntNullableFilter
  observaciones: StringFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
  group: StringNullableFilter
}

input ElementoOrderByInput {
  id: OrderDirection
  estado: OrderDirection
  cantidad: OrderDirection
  observaciones: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
  group: OrderDirection
}

input ElementoUpdateInput {
  producto: ProductoRelateToOneForUpdateInput
  estado: String
  instalacion: InstalacionRelateToOneForUpdateInput
  cantidad: Int
  observaciones: String
  createdAt: DateTime
  updatedAt: DateTime
  group: String
}

input ProductoRelateToOneForUpdateInput {
  create: ProductoCreateInput
  connect: ProductoWhereUniqueInput
  disconnect: Boolean
}

input InstalacionRelateToOneForUpdateInput {
  create: InstalacionCreateInput
  connect: InstalacionWhereUniqueInput
  disconnect: Boolean
}

input ElementoUpdateArgs {
  where: ElementoWhereUniqueInput!
  data: ElementoUpdateInput!
}

input ElementoCreateInput {
  producto: ProductoRelateToOneForCreateInput
  estado: String
  instalacion: InstalacionRelateToOneForCreateInput
  cantidad: Int
  observaciones: String
  createdAt: DateTime
  updatedAt: DateTime
  group: String
}

input ProductoRelateToOneForCreateInput {
  create: ProductoCreateInput
  connect: ProductoWhereUniqueInput
}

input InstalacionRelateToOneForCreateInput {
  create: InstalacionCreateInput
  connect: InstalacionWhereUniqueInput
}

type Empresa {
  id: ID!
  name: String
  logo: String
  cif: String
}

input EmpresaWhereUniqueInput {
  id: ID
}

input EmpresaWhereInput {
  AND: [EmpresaWhereInput!]
  OR: [EmpresaWhereInput!]
  NOT: [EmpresaWhereInput!]
  id: IDFilter
  name: StringFilter
  logo: StringFilter
  cif: StringFilter
}

input EmpresaOrderByInput {
  id: OrderDirection
  name: OrderDirection
  logo: OrderDirection
  cif: OrderDirection
}

input EmpresaUpdateInput {
  name: String
  logo: String
  cif: String
}

input EmpresaUpdateArgs {
  where: EmpresaWhereUniqueInput!
  data: EmpresaUpdateInput!
}

input EmpresaCreateInput {
  name: String
  logo: String
  cif: String
}

type Imagen {
  id: ID!
  archivo: String
  createdAt: DateTime
  updatedAt: DateTime
}

input ImagenWhereUniqueInput {
  id: ID
}

input ImagenWhereInput {
  AND: [ImagenWhereInput!]
  OR: [ImagenWhereInput!]
  NOT: [ImagenWhereInput!]
  id: IDFilter
  archivo: StringFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input ImagenOrderByInput {
  id: OrderDirection
  archivo: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input ImagenUpdateInput {
  archivo: String
  createdAt: DateTime
  updatedAt: DateTime
}

input ImagenUpdateArgs {
  where: ImagenWhereUniqueInput!
  data: ImagenUpdateInput!
}

input ImagenCreateInput {
  archivo: String
  createdAt: DateTime
  updatedAt: DateTime
}

type Manual {
  id: ID!
  producto: Producto
  documento: Documento
  createdAt: DateTime
  updatedAt: DateTime
}

input ManualWhereUniqueInput {
  id: ID
}

input ManualWhereInput {
  AND: [ManualWhereInput!]
  OR: [ManualWhereInput!]
  NOT: [ManualWhereInput!]
  id: IDFilter
  producto: ProductoWhereInput
  documento: DocumentoWhereInput
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input ManualOrderByInput {
  id: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input ManualUpdateInput {
  producto: ProductoRelateToOneForUpdateInput
  documento: DocumentoRelateToOneForUpdateInput
  createdAt: DateTime
  updatedAt: DateTime
}

input DocumentoRelateToOneForUpdateInput {
  create: DocumentoCreateInput
  connect: DocumentoWhereUniqueInput
  disconnect: Boolean
}

input ManualUpdateArgs {
  where: ManualWhereUniqueInput!
  data: ManualUpdateInput!
}

input ManualCreateInput {
  producto: ProductoRelateToOneForCreateInput
  documento: DocumentoRelateToOneForCreateInput
  createdAt: DateTime
  updatedAt: DateTime
}

input DocumentoRelateToOneForCreateInput {
  create: DocumentoCreateInput
  connect: DocumentoWhereUniqueInput
}

type Marca {
  id: ID!
  name: String
  categoria: Categoria
}

input MarcaWhereUniqueInput {
  id: ID
}

input MarcaWhereInput {
  AND: [MarcaWhereInput!]
  OR: [MarcaWhereInput!]
  NOT: [MarcaWhereInput!]
  id: IDFilter
  name: StringFilter
  categoria: CategoriaWhereInput
}

input MarcaOrderByInput {
  id: OrderDirection
  name: OrderDirection
}

input MarcaUpdateInput {
  name: String
  categoria: CategoriaRelateToOneForUpdateInput
}

input CategoriaRelateToOneForUpdateInput {
  create: CategoriaCreateInput
  connect: CategoriaWhereUniqueInput
  disconnect: Boolean
}

input MarcaUpdateArgs {
  where: MarcaWhereUniqueInput!
  data: MarcaUpdateInput!
}

input MarcaCreateInput {
  name: String
  categoria: CategoriaRelateToOneForCreateInput
}

input CategoriaRelateToOneForCreateInput {
  create: CategoriaCreateInput
  connect: CategoriaWhereUniqueInput
}

type Instalacion {
  id: ID!
  tipo: String
  descripcion: String
  edificio: Edificio
  elementos(where: ElementoWhereInput! = {}, orderBy: [ElementoOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ElementoWhereUniqueInput): [Elemento!]
  elementosCount(where: ElementoWhereInput! = {}): Int
  comentarios(where: InstalacionCommentWhereInput! = {}, orderBy: [InstalacionCommentOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: InstalacionCommentWhereUniqueInput): [InstalacionComment!]
  comentariosCount(where: InstalacionCommentWhereInput! = {}): Int
}

input InstalacionWhereUniqueInput {
  id: ID
}

input InstalacionWhereInput {
  AND: [InstalacionWhereInput!]
  OR: [InstalacionWhereInput!]
  NOT: [InstalacionWhereInput!]
  id: IDFilter
  tipo: StringNullableFilter
  descripcion: StringFilter
  edificio: EdificioWhereInput
  elementos: ElementoManyRelationFilter
  comentarios: InstalacionCommentManyRelationFilter
}

input ElementoManyRelationFilter {
  every: ElementoWhereInput
  some: ElementoWhereInput
  none: ElementoWhereInput
}

input InstalacionCommentManyRelationFilter {
  every: InstalacionCommentWhereInput
  some: InstalacionCommentWhereInput
  none: InstalacionCommentWhereInput
}

input InstalacionOrderByInput {
  id: OrderDirection
  tipo: OrderDirection
  descripcion: OrderDirection
}

input InstalacionUpdateInput {
  tipo: String
  descripcion: String
  edificio: EdificioRelateToOneForUpdateInput
  elementos: ElementoRelateToManyForUpdateInput
  comentarios: InstalacionCommentRelateToManyForUpdateInput
}

input ElementoRelateToManyForUpdateInput {
  disconnect: [ElementoWhereUniqueInput!]
  set: [ElementoWhereUniqueInput!]
  create: [ElementoCreateInput!]
  connect: [ElementoWhereUniqueInput!]
}

input InstalacionCommentRelateToManyForUpdateInput {
  disconnect: [InstalacionCommentWhereUniqueInput!]
  set: [InstalacionCommentWhereUniqueInput!]
  create: [InstalacionCommentCreateInput!]
  connect: [InstalacionCommentWhereUniqueInput!]
}

input InstalacionUpdateArgs {
  where: InstalacionWhereUniqueInput!
  data: InstalacionUpdateInput!
}

input InstalacionCreateInput {
  tipo: String
  descripcion: String
  edificio: EdificioRelateToOneForCreateInput
  elementos: ElementoRelateToManyForCreateInput
  comentarios: InstalacionCommentRelateToManyForCreateInput
}

input ElementoRelateToManyForCreateInput {
  create: [ElementoCreateInput!]
  connect: [ElementoWhereUniqueInput!]
}

input InstalacionCommentRelateToManyForCreateInput {
  create: [InstalacionCommentCreateInput!]
  connect: [InstalacionCommentWhereUniqueInput!]
}

type Contraincendio {
  id: ID!
  serial_number: String
  date_made: DateTime
  date_retimbrado: DateTime
  date_last_revision: DateTime
  date_next_revision: DateTime
  tecnico: User
  descripcion: String
  elemento: Elemento
}

input ContraincendioWhereUniqueInput {
  id: ID
}

input ContraincendioWhereInput {
  AND: [ContraincendioWhereInput!]
  OR: [ContraincendioWhereInput!]
  NOT: [ContraincendioWhereInput!]
  id: IDFilter
  serial_number: StringFilter
  date_made: DateTimeNullableFilter
  date_retimbrado: DateTimeNullableFilter
  date_last_revision: DateTimeNullableFilter
  date_next_revision: DateTimeNullableFilter
  tecnico: UserWhereInput
  descripcion: StringFilter
  elemento: ElementoWhereInput
}

input ContraincendioOrderByInput {
  id: OrderDirection
  serial_number: OrderDirection
  date_made: OrderDirection
  date_retimbrado: OrderDirection
  date_last_revision: OrderDirection
  date_next_revision: OrderDirection
  descripcion: OrderDirection
}

input ContraincendioUpdateInput {
  serial_number: String
  date_made: DateTime
  date_retimbrado: DateTime
  date_last_revision: DateTime
  date_next_revision: DateTime
  tecnico: UserRelateToOneForUpdateInput
  descripcion: String
  elemento: ElementoRelateToOneForUpdateInput
}

input ElementoRelateToOneForUpdateInput {
  create: ElementoCreateInput
  connect: ElementoWhereUniqueInput
  disconnect: Boolean
}

input ContraincendioUpdateArgs {
  where: ContraincendioWhereUniqueInput!
  data: ContraincendioUpdateInput!
}

input ContraincendioCreateInput {
  serial_number: String
  date_made: DateTime
  date_retimbrado: DateTime
  date_last_revision: DateTime
  date_next_revision: DateTime
  tecnico: UserRelateToOneForCreateInput
  descripcion: String
  elemento: ElementoRelateToOneForCreateInput
}

input ElementoRelateToOneForCreateInput {
  create: ElementoCreateInput
  connect: ElementoWhereUniqueInput
}

type Inst_Otro {
  id: ID!
  serial_number: String
  date_made: DateTime
  date_last_revision: DateTime
  date_next_revision: DateTime
  elemento: Elemento
  tecnico: User
}

input Inst_OtroWhereUniqueInput {
  id: ID
}

input Inst_OtroWhereInput {
  AND: [Inst_OtroWhereInput!]
  OR: [Inst_OtroWhereInput!]
  NOT: [Inst_OtroWhereInput!]
  id: IDFilter
  serial_number: StringFilter
  date_made: DateTimeNullableFilter
  date_last_revision: DateTimeNullableFilter
  date_next_revision: DateTimeNullableFilter
  elemento: ElementoWhereInput
  tecnico: UserWhereInput
}

input Inst_OtroOrderByInput {
  id: OrderDirection
  serial_number: OrderDirection
  date_made: OrderDirection
  date_last_revision: OrderDirection
  date_next_revision: OrderDirection
}

input Inst_OtroUpdateInput {
  serial_number: String
  date_made: DateTime
  date_last_revision: DateTime
  date_next_revision: DateTime
  elemento: ElementoRelateToOneForUpdateInput
  tecnico: UserRelateToOneForUpdateInput
}

input Inst_OtroUpdateArgs {
  where: Inst_OtroWhereUniqueInput!
  data: Inst_OtroUpdateInput!
}

input Inst_OtroCreateInput {
  serial_number: String
  date_made: DateTime
  date_last_revision: DateTime
  date_next_revision: DateTime
  elemento: ElementoRelateToOneForCreateInput
  tecnico: UserRelateToOneForCreateInput
}

type Reparacion {
  id: ID!
  date_repair: DateTime
  tecnico: User
  descripcion: String
  elemento: Elemento
}

input ReparacionWhereUniqueInput {
  id: ID
}

input ReparacionWhereInput {
  AND: [ReparacionWhereInput!]
  OR: [ReparacionWhereInput!]
  NOT: [ReparacionWhereInput!]
  id: IDFilter
  date_repair: DateTimeNullableFilter
  tecnico: UserWhereInput
  descripcion: StringFilter
  elemento: ElementoWhereInput
}

input ReparacionOrderByInput {
  id: OrderDirection
  date_repair: OrderDirection
  descripcion: OrderDirection
}

input ReparacionUpdateInput {
  date_repair: DateTime
  tecnico: UserRelateToOneForUpdateInput
  descripcion: String
  elemento: ElementoRelateToOneForUpdateInput
}

input ReparacionUpdateArgs {
  where: ReparacionWhereUniqueInput!
  data: ReparacionUpdateInput!
}

input ReparacionCreateInput {
  date_repair: DateTime
  tecnico: UserRelateToOneForCreateInput
  descripcion: String
  elemento: ElementoRelateToOneForCreateInput
}

type Producto {
  id: ID!
  ref: String
  descripcion: String
  categoria: Categoria
  subcategoria: Subcategoria
  marca: Marca
  precio: Int
  ean: String
  imagen: Imagen
  createdAt: DateTime
  updatedAt: DateTime
  label: String
}

input ProductoWhereUniqueInput {
  id: ID
}

input ProductoWhereInput {
  AND: [ProductoWhereInput!]
  OR: [ProductoWhereInput!]
  NOT: [ProductoWhereInput!]
  id: IDFilter
  ref: StringFilter
  descripcion: StringFilter
  categoria: CategoriaWhereInput
  subcategoria: SubcategoriaWhereInput
  marca: MarcaWhereInput
  precio: IntNullableFilter
  ean: StringFilter
  imagen: ImagenWhereInput
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input ProductoOrderByInput {
  id: OrderDirection
  ref: OrderDirection
  descripcion: OrderDirection
  precio: OrderDirection
  ean: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input ProductoUpdateInput {
  ref: String
  descripcion: String
  categoria: CategoriaRelateToOneForUpdateInput
  subcategoria: SubcategoriaRelateToOneForUpdateInput
  marca: MarcaRelateToOneForUpdateInput
  precio: Int
  ean: String
  imagen: ImagenRelateToOneForUpdateInput
  createdAt: DateTime
  updatedAt: DateTime
}

input SubcategoriaRelateToOneForUpdateInput {
  create: SubcategoriaCreateInput
  connect: SubcategoriaWhereUniqueInput
  disconnect: Boolean
}

input MarcaRelateToOneForUpdateInput {
  create: MarcaCreateInput
  connect: MarcaWhereUniqueInput
  disconnect: Boolean
}

input ImagenRelateToOneForUpdateInput {
  create: ImagenCreateInput
  connect: ImagenWhereUniqueInput
  disconnect: Boolean
}

input ProductoUpdateArgs {
  where: ProductoWhereUniqueInput!
  data: ProductoUpdateInput!
}

input ProductoCreateInput {
  ref: String
  descripcion: String
  categoria: CategoriaRelateToOneForCreateInput
  subcategoria: SubcategoriaRelateToOneForCreateInput
  marca: MarcaRelateToOneForCreateInput
  precio: Int
  ean: String
  imagen: ImagenRelateToOneForCreateInput
  createdAt: DateTime
  updatedAt: DateTime
}

input SubcategoriaRelateToOneForCreateInput {
  create: SubcategoriaCreateInput
  connect: SubcategoriaWhereUniqueInput
}

input MarcaRelateToOneForCreateInput {
  create: MarcaCreateInput
  connect: MarcaWhereUniqueInput
}

input ImagenRelateToOneForCreateInput {
  create: ImagenCreateInput
  connect: ImagenWhereUniqueInput
}

type Rol {
  id: ID!
  name: String
  level: Int
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  usersCount(where: UserWhereInput! = {}): Int
}

input RolWhereUniqueInput {
  id: ID
}

input RolWhereInput {
  AND: [RolWhereInput!]
  OR: [RolWhereInput!]
  NOT: [RolWhereInput!]
  id: IDFilter
  name: StringFilter
  level: IntNullableFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
  deletedAt: DateTimeNullableFilter
  users: UserManyRelationFilter
}

input UserManyRelationFilter {
  every: UserWhereInput
  some: UserWhereInput
  none: UserWhereInput
}

input RolOrderByInput {
  id: OrderDirection
  name: OrderDirection
  level: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
  deletedAt: OrderDirection
}

input RolUpdateInput {
  name: String
  level: Int
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  users: UserRelateToManyForUpdateInput
}

input UserRelateToManyForUpdateInput {
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

input RolUpdateArgs {
  where: RolWhereUniqueInput!
  data: RolUpdateInput!
}

input RolCreateInput {
  name: String
  level: Int
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  users: UserRelateToManyForCreateInput
}

input UserRelateToManyForCreateInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

type Subcategoria {
  id: ID!
  name: String
  categoria: Categoria
}

input SubcategoriaWhereUniqueInput {
  id: ID
}

input SubcategoriaWhereInput {
  AND: [SubcategoriaWhereInput!]
  OR: [SubcategoriaWhereInput!]
  NOT: [SubcategoriaWhereInput!]
  id: IDFilter
  name: StringFilter
  categoria: CategoriaWhereInput
}

input SubcategoriaOrderByInput {
  id: OrderDirection
  name: OrderDirection
}

input SubcategoriaUpdateInput {
  name: String
  categoria: CategoriaRelateToOneForUpdateInput
}

input SubcategoriaUpdateArgs {
  where: SubcategoriaWhereUniqueInput!
  data: SubcategoriaUpdateInput!
}

input SubcategoriaCreateInput {
  name: String
  categoria: CategoriaRelateToOneForCreateInput
}

type Telefonillo {
  id: ID!
  modelo: String
  abrep: String
  micro: String
  comun: String
  altavoz: String
  llamada: String
}

input TelefonilloWhereUniqueInput {
  id: ID
}

input TelefonilloWhereInput {
  AND: [TelefonilloWhereInput!]
  OR: [TelefonilloWhereInput!]
  NOT: [TelefonilloWhereInput!]
  id: IDFilter
  modelo: StringFilter
  abrep: StringFilter
  micro: StringFilter
  comun: StringFilter
  altavoz: StringFilter
  llamada: StringFilter
}

input TelefonilloOrderByInput {
  id: OrderDirection
  modelo: OrderDirection
  abrep: OrderDirection
  micro: OrderDirection
  comun: OrderDirection
  altavoz: OrderDirection
  llamada: OrderDirection
}

input TelefonilloUpdateInput {
  modelo: String
  abrep: String
  micro: String
  comun: String
  altavoz: String
  llamada: String
}

input TelefonilloUpdateArgs {
  where: TelefonilloWhereUniqueInput!
  data: TelefonilloUpdateInput!
}

input TelefonilloCreateInput {
  modelo: String
  abrep: String
  micro: String
  comun: String
  altavoz: String
  llamada: String
}

type User {
  id: ID!
  name: String
  email: String
  password: PasswordState
  googleId: String
  photo: String
  lastLogin: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  profile: Profile
  empresa: Empresa
  rol: Rol
  tecnicoNum: Int
  token: String
}

type PasswordState {
  isSet: Boolean!
}

input UserWhereUniqueInput {
  id: ID
  email: String
  googleId: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IDFilter
  name: StringFilter
  email: StringFilter
  password: PasswordFilter
  googleId: StringFilter
  photo: StringFilter
  lastLogin: DateTimeNullableFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
  profile: ProfileWhereInput
  empresa: EmpresaWhereInput
  rol: RolWhereInput
  tecnicoNum: IntNullableFilter
  token: StringFilter
}

input PasswordFilter {
  isSet: Boolean!
}

input UserOrderByInput {
  id: OrderDirection
  name: OrderDirection
  email: OrderDirection
  googleId: OrderDirection
  photo: OrderDirection
  lastLogin: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
  tecnicoNum: OrderDirection
  token: OrderDirection
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  googleId: String
  photo: String
  lastLogin: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  profile: ProfileRelateToOneForUpdateInput
  empresa: EmpresaRelateToOneForUpdateInput
  rol: RolRelateToOneForUpdateInput
  tecnicoNum: Int
  token: String
}

input ProfileRelateToOneForUpdateInput {
  create: ProfileCreateInput
  connect: ProfileWhereUniqueInput
  disconnect: Boolean
}

input EmpresaRelateToOneForUpdateInput {
  create: EmpresaCreateInput
  connect: EmpresaWhereUniqueInput
  disconnect: Boolean
}

input RolRelateToOneForUpdateInput {
  create: RolCreateInput
  connect: RolWhereUniqueInput
  disconnect: Boolean
}

input UserUpdateArgs {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input UserCreateInput {
  name: String
  email: String
  password: String
  googleId: String
  photo: String
  lastLogin: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  profile: ProfileRelateToOneForCreateInput
  empresa: EmpresaRelateToOneForCreateInput
  rol: RolRelateToOneForCreateInput
  tecnicoNum: Int
  token: String
}

input ProfileRelateToOneForCreateInput {
  create: ProfileCreateInput
  connect: ProfileWhereUniqueInput
}

input EmpresaRelateToOneForCreateInput {
  create: EmpresaCreateInput
  connect: EmpresaWhereUniqueInput
}

input RolRelateToOneForCreateInput {
  create: RolCreateInput
  connect: RolWhereUniqueInput
}

type Aviso {
  id: ID!
  numero: String
  comunidad: Comunidad
  tecnico: User
  solucion: String
  observaciones: String
  status: String
  createdAt: DateTime
  updatedAt: DateTime
}

input AvisoWhereUniqueInput {
  id: ID
}

input AvisoWhereInput {
  AND: [AvisoWhereInput!]
  OR: [AvisoWhereInput!]
  NOT: [AvisoWhereInput!]
  id: IDFilter
  numero: StringFilter
  comunidad: ComunidadWhereInput
  tecnico: UserWhereInput
  solucion: StringFilter
  observaciones: StringFilter
  status: StringNullableFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input AvisoOrderByInput {
  id: OrderDirection
  numero: OrderDirection
  solucion: OrderDirection
  observaciones: OrderDirection
  status: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input AvisoUpdateInput {
  numero: String
  comunidad: ComunidadRelateToOneForUpdateInput
  tecnico: UserRelateToOneForUpdateInput
  solucion: String
  observaciones: String
  status: String
  createdAt: DateTime
  updatedAt: DateTime
}

input AvisoUpdateArgs {
  where: AvisoWhereUniqueInput!
  data: AvisoUpdateInput!
}

input AvisoCreateInput {
  numero: String
  comunidad: ComunidadRelateToOneForCreateInput
  tecnico: UserRelateToOneForCreateInput
  solucion: String
  observaciones: String
  status: String
  createdAt: DateTime
  updatedAt: DateTime
}

type History {
  id: ID!
  aviso: Aviso
  tecnico: User
  status: String
  observaciones: String
  createdAt: DateTime
  updatedAt: DateTime
}

input HistoryWhereUniqueInput {
  id: ID
}

input HistoryWhereInput {
  AND: [HistoryWhereInput!]
  OR: [HistoryWhereInput!]
  NOT: [HistoryWhereInput!]
  id: IDFilter
  aviso: AvisoWhereInput
  tecnico: UserWhereInput
  status: StringNullableFilter
  observaciones: StringFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input HistoryOrderByInput {
  id: OrderDirection
  status: OrderDirection
  observaciones: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input HistoryUpdateInput {
  aviso: AvisoRelateToOneForUpdateInput
  tecnico: UserRelateToOneForUpdateInput
  status: String
  observaciones: String
  createdAt: DateTime
  updatedAt: DateTime
}

input AvisoRelateToOneForUpdateInput {
  create: AvisoCreateInput
  connect: AvisoWhereUniqueInput
  disconnect: Boolean
}

input HistoryUpdateArgs {
  where: HistoryWhereUniqueInput!
  data: HistoryUpdateInput!
}

input HistoryCreateInput {
  aviso: AvisoRelateToOneForCreateInput
  tecnico: UserRelateToOneForCreateInput
  status: String
  observaciones: String
  createdAt: DateTime
  updatedAt: DateTime
}

input AvisoRelateToOneForCreateInput {
  create: AvisoCreateInput
  connect: AvisoWhereUniqueInput
}

type Adjunto {
  id: ID!
  aviso: Aviso
  url: String
  createdAt: DateTime
  updatedAt: DateTime
}

input AdjuntoWhereUniqueInput {
  id: ID
}

input AdjuntoWhereInput {
  AND: [AdjuntoWhereInput!]
  OR: [AdjuntoWhereInput!]
  NOT: [AdjuntoWhereInput!]
  id: IDFilter
  aviso: AvisoWhereInput
  url: StringFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input AdjuntoOrderByInput {
  id: OrderDirection
  url: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input AdjuntoUpdateInput {
  aviso: AvisoRelateToOneForUpdateInput
  url: String
  createdAt: DateTime
  updatedAt: DateTime
}

input AdjuntoUpdateArgs {
  where: AdjuntoWhereUniqueInput!
  data: AdjuntoUpdateInput!
}

input AdjuntoCreateInput {
  aviso: AvisoRelateToOneForCreateInput
  url: String
  createdAt: DateTime
  updatedAt: DateTime
}

type Profile {
  id: ID!
  user: User
  bio: String
  photo: String
  phone: String
  workPhone: String
}

input ProfileWhereUniqueInput {
  id: ID
}

input ProfileWhereInput {
  AND: [ProfileWhereInput!]
  OR: [ProfileWhereInput!]
  NOT: [ProfileWhereInput!]
  id: IDFilter
  user: UserWhereInput
  bio: StringFilter
  photo: StringFilter
  phone: StringFilter
  workPhone: StringFilter
}

input ProfileOrderByInput {
  id: OrderDirection
  bio: OrderDirection
  photo: OrderDirection
  phone: OrderDirection
  workPhone: OrderDirection
}

input ProfileUpdateInput {
  user: UserRelateToOneForUpdateInput
  bio: String
  photo: String
  phone: String
  workPhone: String
}

input ProfileUpdateArgs {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateInput!
}

input ProfileCreateInput {
  user: UserRelateToOneForCreateInput
  bio: String
  photo: String
  phone: String
  workPhone: String
}

type EdificioComment {
  id: ID!
  author: User
  edificio: Edificio
  comentario: String
  createdAt: DateTime
  updatedAt: DateTime
}

input EdificioCommentWhereUniqueInput {
  id: ID
}

input EdificioCommentWhereInput {
  AND: [EdificioCommentWhereInput!]
  OR: [EdificioCommentWhereInput!]
  NOT: [EdificioCommentWhereInput!]
  id: IDFilter
  author: UserWhereInput
  edificio: EdificioWhereInput
  comentario: StringFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input EdificioCommentOrderByInput {
  id: OrderDirection
  comentario: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input EdificioCommentUpdateInput {
  author: UserRelateToOneForUpdateInput
  edificio: EdificioRelateToOneForUpdateInput
  comentario: String
  createdAt: DateTime
  updatedAt: DateTime
}

input EdificioCommentUpdateArgs {
  where: EdificioCommentWhereUniqueInput!
  data: EdificioCommentUpdateInput!
}

input EdificioCommentCreateInput {
  author: UserRelateToOneForCreateInput
  edificio: EdificioRelateToOneForCreateInput
  comentario: String
  createdAt: DateTime
  updatedAt: DateTime
}

type AvisoComment {
  id: ID!
  author: User
  aviso: Aviso
  comentario: String
  createdAt: DateTime
  updatedAt: DateTime
}

input AvisoCommentWhereUniqueInput {
  id: ID
}

input AvisoCommentWhereInput {
  AND: [AvisoCommentWhereInput!]
  OR: [AvisoCommentWhereInput!]
  NOT: [AvisoCommentWhereInput!]
  id: IDFilter
  author: UserWhereInput
  aviso: AvisoWhereInput
  comentario: StringFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input AvisoCommentOrderByInput {
  id: OrderDirection
  comentario: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input AvisoCommentUpdateInput {
  author: UserRelateToOneForUpdateInput
  aviso: AvisoRelateToOneForUpdateInput
  comentario: String
  createdAt: DateTime
  updatedAt: DateTime
}

input AvisoCommentUpdateArgs {
  where: AvisoCommentWhereUniqueInput!
  data: AvisoCommentUpdateInput!
}

input AvisoCommentCreateInput {
  author: UserRelateToOneForCreateInput
  aviso: AvisoRelateToOneForCreateInput
  comentario: String
  createdAt: DateTime
  updatedAt: DateTime
}

type ElementoComment {
  id: ID!
  author: User
  elemento: Elemento
  comentario: String
  createdAt: DateTime
  updatedAt: DateTime
}

input ElementoCommentWhereUniqueInput {
  id: ID
}

input ElementoCommentWhereInput {
  AND: [ElementoCommentWhereInput!]
  OR: [ElementoCommentWhereInput!]
  NOT: [ElementoCommentWhereInput!]
  id: IDFilter
  author: UserWhereInput
  elemento: ElementoWhereInput
  comentario: StringFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input ElementoCommentOrderByInput {
  id: OrderDirection
  comentario: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input ElementoCommentUpdateInput {
  author: UserRelateToOneForUpdateInput
  elemento: ElementoRelateToOneForUpdateInput
  comentario: String
  createdAt: DateTime
  updatedAt: DateTime
}

input ElementoCommentUpdateArgs {
  where: ElementoCommentWhereUniqueInput!
  data: ElementoCommentUpdateInput!
}

input ElementoCommentCreateInput {
  author: UserRelateToOneForCreateInput
  elemento: ElementoRelateToOneForCreateInput
  comentario: String
  createdAt: DateTime
  updatedAt: DateTime
}

type InstalacionComment {
  id: ID!
  author: User
  instalacion: Instalacion
  comentario: String
  createdAt: DateTime
  updatedAt: DateTime
}

input InstalacionCommentWhereUniqueInput {
  id: ID
}

input InstalacionCommentWhereInput {
  AND: [InstalacionCommentWhereInput!]
  OR: [InstalacionCommentWhereInput!]
  NOT: [InstalacionCommentWhereInput!]
  id: IDFilter
  author: UserWhereInput
  instalacion: InstalacionWhereInput
  comentario: StringFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input InstalacionCommentOrderByInput {
  id: OrderDirection
  comentario: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input InstalacionCommentUpdateInput {
  author: UserRelateToOneForUpdateInput
  instalacion: InstalacionRelateToOneForUpdateInput
  comentario: String
  createdAt: DateTime
  updatedAt: DateTime
}

input InstalacionCommentUpdateArgs {
  where: InstalacionCommentWhereUniqueInput!
  data: InstalacionCommentUpdateInput!
}

input InstalacionCommentCreateInput {
  author: UserRelateToOneForCreateInput
  instalacion: InstalacionRelateToOneForCreateInput
  comentario: String
  createdAt: DateTime
  updatedAt: DateTime
}

type Subcription {
  id: ID!
  name: String
  limits: Int
  price: Int
  description: String
  createdAt: DateTime
  updatedAt: DateTime
}

input SubcriptionWhereUniqueInput {
  id: ID
}

input SubcriptionWhereInput {
  AND: [SubcriptionWhereInput!]
  OR: [SubcriptionWhereInput!]
  NOT: [SubcriptionWhereInput!]
  id: IDFilter
  name: StringFilter
  limits: IntNullableFilter
  price: IntNullableFilter
  description: StringFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input SubcriptionOrderByInput {
  id: OrderDirection
  name: OrderDirection
  limits: OrderDirection
  price: OrderDirection
  description: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input SubcriptionUpdateInput {
  name: String
  limits: Int
  price: Int
  description: String
  createdAt: DateTime
  updatedAt: DateTime
}

input SubcriptionUpdateArgs {
  where: SubcriptionWhereUniqueInput!
  data: SubcriptionUpdateInput!
}

input SubcriptionCreateInput {
  name: String
  limits: Int
  price: Int
  description: String
  createdAt: DateTime
  updatedAt: DateTime
}

type SubscriptionEmpresa {
  id: ID!
  empresa: Empresa
  subscription: Subcription
  expiration: DateTime
  status: String
  createdAt: DateTime
  updatedAt: DateTime
}

input SubscriptionEmpresaWhereUniqueInput {
  id: ID
}

input SubscriptionEmpresaWhereInput {
  AND: [SubscriptionEmpresaWhereInput!]
  OR: [SubscriptionEmpresaWhereInput!]
  NOT: [SubscriptionEmpresaWhereInput!]
  id: IDFilter
  empresa: EmpresaWhereInput
  subscription: SubcriptionWhereInput
  expiration: DateTimeNullableFilter
  status: StringNullableFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input SubscriptionEmpresaOrderByInput {
  id: OrderDirection
  expiration: OrderDirection
  status: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input SubscriptionEmpresaUpdateInput {
  empresa: EmpresaRelateToOneForUpdateInput
  subscription: SubcriptionRelateToOneForUpdateInput
  expiration: DateTime
  status: String
  createdAt: DateTime
  updatedAt: DateTime
}

input SubcriptionRelateToOneForUpdateInput {
  create: SubcriptionCreateInput
  connect: SubcriptionWhereUniqueInput
  disconnect: Boolean
}

input SubscriptionEmpresaUpdateArgs {
  where: SubscriptionEmpresaWhereUniqueInput!
  data: SubscriptionEmpresaUpdateInput!
}

input SubscriptionEmpresaCreateInput {
  empresa: EmpresaRelateToOneForCreateInput
  subscription: SubcriptionRelateToOneForCreateInput
  expiration: DateTime
  status: String
  createdAt: DateTime
  updatedAt: DateTime
}

input SubcriptionRelateToOneForCreateInput {
  create: SubcriptionCreateInput
  connect: SubcriptionWhereUniqueInput
}

type Config {
  id: ID!
  key: String
  value: String
  createdAt: DateTime
  updatedAt: DateTime
}

input ConfigWhereUniqueInput {
  id: ID
}

input ConfigWhereInput {
  AND: [ConfigWhereInput!]
  OR: [ConfigWhereInput!]
  NOT: [ConfigWhereInput!]
  id: IDFilter
  key: StringFilter
  value: StringFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input ConfigOrderByInput {
  id: OrderDirection
  key: OrderDirection
  value: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input ConfigUpdateInput {
  key: String
  value: String
  createdAt: DateTime
  updatedAt: DateTime
}

input ConfigUpdateArgs {
  where: ConfigWhereUniqueInput!
  data: ConfigUpdateInput!
}

input ConfigCreateInput {
  key: String
  value: String
  createdAt: DateTime
  updatedAt: DateTime
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createAdmin(data: AdminCreateInput!): Admin
  createAdmins(data: [AdminCreateInput!]!): [Admin]
  updateAdmin(where: AdminWhereUniqueInput!, data: AdminUpdateInput!): Admin
  updateAdmins(data: [AdminUpdateArgs!]!): [Admin]
  deleteAdmin(where: AdminWhereUniqueInput!): Admin
  deleteAdmins(where: [AdminWhereUniqueInput!]!): [Admin]
  createCategoria(data: CategoriaCreateInput!): Categoria
  createCategorias(data: [CategoriaCreateInput!]!): [Categoria]
  updateCategoria(where: CategoriaWhereUniqueInput!, data: CategoriaUpdateInput!): Categoria
  updateCategorias(data: [CategoriaUpdateArgs!]!): [Categoria]
  deleteCategoria(where: CategoriaWhereUniqueInput!): Categoria
  deleteCategorias(where: [CategoriaWhereUniqueInput!]!): [Categoria]
  createComunidad(data: ComunidadCreateInput!): Comunidad
  createComunidads(data: [ComunidadCreateInput!]!): [Comunidad]
  updateComunidad(where: ComunidadWhereUniqueInput!, data: ComunidadUpdateInput!): Comunidad
  updateComunidads(data: [ComunidadUpdateArgs!]!): [Comunidad]
  deleteComunidad(where: ComunidadWhereUniqueInput!): Comunidad
  deleteComunidads(where: [ComunidadWhereUniqueInput!]!): [Comunidad]
  createContacto(data: ContactoCreateInput!): Contacto
  createContactos(data: [ContactoCreateInput!]!): [Contacto]
  updateContacto(where: ContactoWhereUniqueInput!, data: ContactoUpdateInput!): Contacto
  updateContactos(data: [ContactoUpdateArgs!]!): [Contacto]
  deleteContacto(where: ContactoWhereUniqueInput!): Contacto
  deleteContactos(where: [ContactoWhereUniqueInput!]!): [Contacto]
  createDocumento(data: DocumentoCreateInput!): Documento
  createDocumentos(data: [DocumentoCreateInput!]!): [Documento]
  updateDocumento(where: DocumentoWhereUniqueInput!, data: DocumentoUpdateInput!): Documento
  updateDocumentos(data: [DocumentoUpdateArgs!]!): [Documento]
  deleteDocumento(where: DocumentoWhereUniqueInput!): Documento
  deleteDocumentos(where: [DocumentoWhereUniqueInput!]!): [Documento]
  createEdificio(data: EdificioCreateInput!): Edificio
  createEdificios(data: [EdificioCreateInput!]!): [Edificio]
  updateEdificio(where: EdificioWhereUniqueInput!, data: EdificioUpdateInput!): Edificio
  updateEdificios(data: [EdificioUpdateArgs!]!): [Edificio]
  deleteEdificio(where: EdificioWhereUniqueInput!): Edificio
  deleteEdificios(where: [EdificioWhereUniqueInput!]!): [Edificio]
  createElemento(data: ElementoCreateInput!): Elemento
  createElementos(data: [ElementoCreateInput!]!): [Elemento]
  updateElemento(where: ElementoWhereUniqueInput!, data: ElementoUpdateInput!): Elemento
  updateElementos(data: [ElementoUpdateArgs!]!): [Elemento]
  deleteElemento(where: ElementoWhereUniqueInput!): Elemento
  deleteElementos(where: [ElementoWhereUniqueInput!]!): [Elemento]
  createEmpresa(data: EmpresaCreateInput!): Empresa
  createEmpresas(data: [EmpresaCreateInput!]!): [Empresa]
  updateEmpresa(where: EmpresaWhereUniqueInput!, data: EmpresaUpdateInput!): Empresa
  updateEmpresas(data: [EmpresaUpdateArgs!]!): [Empresa]
  deleteEmpresa(where: EmpresaWhereUniqueInput!): Empresa
  deleteEmpresas(where: [EmpresaWhereUniqueInput!]!): [Empresa]
  createImagen(data: ImagenCreateInput!): Imagen
  createImagens(data: [ImagenCreateInput!]!): [Imagen]
  updateImagen(where: ImagenWhereUniqueInput!, data: ImagenUpdateInput!): Imagen
  updateImagens(data: [ImagenUpdateArgs!]!): [Imagen]
  deleteImagen(where: ImagenWhereUniqueInput!): Imagen
  deleteImagens(where: [ImagenWhereUniqueInput!]!): [Imagen]
  createManual(data: ManualCreateInput!): Manual
  createManuals(data: [ManualCreateInput!]!): [Manual]
  updateManual(where: ManualWhereUniqueInput!, data: ManualUpdateInput!): Manual
  updateManuals(data: [ManualUpdateArgs!]!): [Manual]
  deleteManual(where: ManualWhereUniqueInput!): Manual
  deleteManuals(where: [ManualWhereUniqueInput!]!): [Manual]
  createMarca(data: MarcaCreateInput!): Marca
  createMarcas(data: [MarcaCreateInput!]!): [Marca]
  updateMarca(where: MarcaWhereUniqueInput!, data: MarcaUpdateInput!): Marca
  updateMarcas(data: [MarcaUpdateArgs!]!): [Marca]
  deleteMarca(where: MarcaWhereUniqueInput!): Marca
  deleteMarcas(where: [MarcaWhereUniqueInput!]!): [Marca]
  createInstalacion(data: InstalacionCreateInput!): Instalacion
  createInstalacions(data: [InstalacionCreateInput!]!): [Instalacion]
  updateInstalacion(where: InstalacionWhereUniqueInput!, data: InstalacionUpdateInput!): Instalacion
  updateInstalacions(data: [InstalacionUpdateArgs!]!): [Instalacion]
  deleteInstalacion(where: InstalacionWhereUniqueInput!): Instalacion
  deleteInstalacions(where: [InstalacionWhereUniqueInput!]!): [Instalacion]
  createContraincendio(data: ContraincendioCreateInput!): Contraincendio
  createContraincendios(data: [ContraincendioCreateInput!]!): [Contraincendio]
  updateContraincendio(where: ContraincendioWhereUniqueInput!, data: ContraincendioUpdateInput!): Contraincendio
  updateContraincendios(data: [ContraincendioUpdateArgs!]!): [Contraincendio]
  deleteContraincendio(where: ContraincendioWhereUniqueInput!): Contraincendio
  deleteContraincendios(where: [ContraincendioWhereUniqueInput!]!): [Contraincendio]
  createInst_Otro(data: Inst_OtroCreateInput!): Inst_Otro
  createInstOtros(data: [Inst_OtroCreateInput!]!): [Inst_Otro]
  updateInst_Otro(where: Inst_OtroWhereUniqueInput!, data: Inst_OtroUpdateInput!): Inst_Otro
  updateInstOtros(data: [Inst_OtroUpdateArgs!]!): [Inst_Otro]
  deleteInst_Otro(where: Inst_OtroWhereUniqueInput!): Inst_Otro
  deleteInstOtros(where: [Inst_OtroWhereUniqueInput!]!): [Inst_Otro]
  createReparacion(data: ReparacionCreateInput!): Reparacion
  createReparacions(data: [ReparacionCreateInput!]!): [Reparacion]
  updateReparacion(where: ReparacionWhereUniqueInput!, data: ReparacionUpdateInput!): Reparacion
  updateReparacions(data: [ReparacionUpdateArgs!]!): [Reparacion]
  deleteReparacion(where: ReparacionWhereUniqueInput!): Reparacion
  deleteReparacions(where: [ReparacionWhereUniqueInput!]!): [Reparacion]
  createProducto(data: ProductoCreateInput!): Producto
  createProductos(data: [ProductoCreateInput!]!): [Producto]
  updateProducto(where: ProductoWhereUniqueInput!, data: ProductoUpdateInput!): Producto
  updateProductos(data: [ProductoUpdateArgs!]!): [Producto]
  deleteProducto(where: ProductoWhereUniqueInput!): Producto
  deleteProductos(where: [ProductoWhereUniqueInput!]!): [Producto]
  createRol(data: RolCreateInput!): Rol
  createRols(data: [RolCreateInput!]!): [Rol]
  updateRol(where: RolWhereUniqueInput!, data: RolUpdateInput!): Rol
  updateRols(data: [RolUpdateArgs!]!): [Rol]
  deleteRol(where: RolWhereUniqueInput!): Rol
  deleteRols(where: [RolWhereUniqueInput!]!): [Rol]
  createSubcategoria(data: SubcategoriaCreateInput!): Subcategoria
  createSubcategorias(data: [SubcategoriaCreateInput!]!): [Subcategoria]
  updateSubcategoria(where: SubcategoriaWhereUniqueInput!, data: SubcategoriaUpdateInput!): Subcategoria
  updateSubcategorias(data: [SubcategoriaUpdateArgs!]!): [Subcategoria]
  deleteSubcategoria(where: SubcategoriaWhereUniqueInput!): Subcategoria
  deleteSubcategorias(where: [SubcategoriaWhereUniqueInput!]!): [Subcategoria]
  createTelefonillo(data: TelefonilloCreateInput!): Telefonillo
  createTelefonillos(data: [TelefonilloCreateInput!]!): [Telefonillo]
  updateTelefonillo(where: TelefonilloWhereUniqueInput!, data: TelefonilloUpdateInput!): Telefonillo
  updateTelefonillos(data: [TelefonilloUpdateArgs!]!): [Telefonillo]
  deleteTelefonillo(where: TelefonilloWhereUniqueInput!): Telefonillo
  deleteTelefonillos(where: [TelefonilloWhereUniqueInput!]!): [Telefonillo]
  createUser(data: UserCreateInput!): User
  createUsers(data: [UserCreateInput!]!): [User]
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UserUpdateArgs!]!): [User]
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: [UserWhereUniqueInput!]!): [User]
  createAviso(data: AvisoCreateInput!): Aviso
  createAvisos(data: [AvisoCreateInput!]!): [Aviso]
  updateAviso(where: AvisoWhereUniqueInput!, data: AvisoUpdateInput!): Aviso
  updateAvisos(data: [AvisoUpdateArgs!]!): [Aviso]
  deleteAviso(where: AvisoWhereUniqueInput!): Aviso
  deleteAvisos(where: [AvisoWhereUniqueInput!]!): [Aviso]
  createHistory(data: HistoryCreateInput!): History
  createHistories(data: [HistoryCreateInput!]!): [History]
  updateHistory(where: HistoryWhereUniqueInput!, data: HistoryUpdateInput!): History
  updateHistories(data: [HistoryUpdateArgs!]!): [History]
  deleteHistory(where: HistoryWhereUniqueInput!): History
  deleteHistories(where: [HistoryWhereUniqueInput!]!): [History]
  createAdjunto(data: AdjuntoCreateInput!): Adjunto
  createAdjuntos(data: [AdjuntoCreateInput!]!): [Adjunto]
  updateAdjunto(where: AdjuntoWhereUniqueInput!, data: AdjuntoUpdateInput!): Adjunto
  updateAdjuntos(data: [AdjuntoUpdateArgs!]!): [Adjunto]
  deleteAdjunto(where: AdjuntoWhereUniqueInput!): Adjunto
  deleteAdjuntos(where: [AdjuntoWhereUniqueInput!]!): [Adjunto]
  createProfile(data: ProfileCreateInput!): Profile
  createProfiles(data: [ProfileCreateInput!]!): [Profile]
  updateProfile(where: ProfileWhereUniqueInput!, data: ProfileUpdateInput!): Profile
  updateProfiles(data: [ProfileUpdateArgs!]!): [Profile]
  deleteProfile(where: ProfileWhereUniqueInput!): Profile
  deleteProfiles(where: [ProfileWhereUniqueInput!]!): [Profile]
  createEdificioComment(data: EdificioCommentCreateInput!): EdificioComment
  createEdificioComments(data: [EdificioCommentCreateInput!]!): [EdificioComment]
  updateEdificioComment(where: EdificioCommentWhereUniqueInput!, data: EdificioCommentUpdateInput!): EdificioComment
  updateEdificioComments(data: [EdificioCommentUpdateArgs!]!): [EdificioComment]
  deleteEdificioComment(where: EdificioCommentWhereUniqueInput!): EdificioComment
  deleteEdificioComments(where: [EdificioCommentWhereUniqueInput!]!): [EdificioComment]
  createAvisoComment(data: AvisoCommentCreateInput!): AvisoComment
  createAvisoComments(data: [AvisoCommentCreateInput!]!): [AvisoComment]
  updateAvisoComment(where: AvisoCommentWhereUniqueInput!, data: AvisoCommentUpdateInput!): AvisoComment
  updateAvisoComments(data: [AvisoCommentUpdateArgs!]!): [AvisoComment]
  deleteAvisoComment(where: AvisoCommentWhereUniqueInput!): AvisoComment
  deleteAvisoComments(where: [AvisoCommentWhereUniqueInput!]!): [AvisoComment]
  createElementoComment(data: ElementoCommentCreateInput!): ElementoComment
  createElementoComments(data: [ElementoCommentCreateInput!]!): [ElementoComment]
  updateElementoComment(where: ElementoCommentWhereUniqueInput!, data: ElementoCommentUpdateInput!): ElementoComment
  updateElementoComments(data: [ElementoCommentUpdateArgs!]!): [ElementoComment]
  deleteElementoComment(where: ElementoCommentWhereUniqueInput!): ElementoComment
  deleteElementoComments(where: [ElementoCommentWhereUniqueInput!]!): [ElementoComment]
  createInstalacionComment(data: InstalacionCommentCreateInput!): InstalacionComment
  createInstalacionComments(data: [InstalacionCommentCreateInput!]!): [InstalacionComment]
  updateInstalacionComment(where: InstalacionCommentWhereUniqueInput!, data: InstalacionCommentUpdateInput!): InstalacionComment
  updateInstalacionComments(data: [InstalacionCommentUpdateArgs!]!): [InstalacionComment]
  deleteInstalacionComment(where: InstalacionCommentWhereUniqueInput!): InstalacionComment
  deleteInstalacionComments(where: [InstalacionCommentWhereUniqueInput!]!): [InstalacionComment]
  createSubcription(data: SubcriptionCreateInput!): Subcription
  createSubcriptions(data: [SubcriptionCreateInput!]!): [Subcription]
  updateSubcription(where: SubcriptionWhereUniqueInput!, data: SubcriptionUpdateInput!): Subcription
  updateSubcriptions(data: [SubcriptionUpdateArgs!]!): [Subcription]
  deleteSubcription(where: SubcriptionWhereUniqueInput!): Subcription
  deleteSubcriptions(where: [SubcriptionWhereUniqueInput!]!): [Subcription]
  createSubscriptionEmpresa(data: SubscriptionEmpresaCreateInput!): SubscriptionEmpresa
  createSubscriptionEmpresas(data: [SubscriptionEmpresaCreateInput!]!): [SubscriptionEmpresa]
  updateSubscriptionEmpresa(where: SubscriptionEmpresaWhereUniqueInput!, data: SubscriptionEmpresaUpdateInput!): SubscriptionEmpresa
  updateSubscriptionEmpresas(data: [SubscriptionEmpresaUpdateArgs!]!): [SubscriptionEmpresa]
  deleteSubscriptionEmpresa(where: SubscriptionEmpresaWhereUniqueInput!): SubscriptionEmpresa
  deleteSubscriptionEmpresas(where: [SubscriptionEmpresaWhereUniqueInput!]!): [SubscriptionEmpresa]
  createConfig(data: ConfigCreateInput!): Config
  createConfigs(data: [ConfigCreateInput!]!): [Config]
  updateConfig(where: ConfigWhereUniqueInput!, data: ConfigUpdateInput!): Config
  updateConfigs(data: [ConfigUpdateArgs!]!): [Config]
  deleteConfig(where: ConfigWhereUniqueInput!): Config
  deleteConfigs(where: [ConfigWhereUniqueInput!]!): [Config]
  endSession: Boolean!
  authenticateUserWithPassword(email: String!, password: String!): UserAuthenticationWithPasswordResult
  createInitialUser(data: CreateInitialUserInput!): UserAuthenticationWithPasswordSuccess!
}

union UserAuthenticationWithPasswordResult = UserAuthenticationWithPasswordSuccess | UserAuthenticationWithPasswordFailure

type UserAuthenticationWithPasswordSuccess {
  sessionToken: String!
  item: User!
}

type UserAuthenticationWithPasswordFailure {
  message: String!
}

input CreateInitialUserInput {
  name: String
  email: String
  password: String
}

type Query {
  admin(where: AdminWhereUniqueInput!): Admin
  admins(where: AdminWhereInput! = {}, orderBy: [AdminOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AdminWhereUniqueInput): [Admin!]
  adminsCount(where: AdminWhereInput! = {}): Int
  categoria(where: CategoriaWhereUniqueInput!): Categoria
  categorias(where: CategoriaWhereInput! = {}, orderBy: [CategoriaOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CategoriaWhereUniqueInput): [Categoria!]
  categoriasCount(where: CategoriaWhereInput! = {}): Int
  comunidad(where: ComunidadWhereUniqueInput!): Comunidad
  comunidads(where: ComunidadWhereInput! = {}, orderBy: [ComunidadOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ComunidadWhereUniqueInput): [Comunidad!]
  comunidadsCount(where: ComunidadWhereInput! = {}): Int
  contacto(where: ContactoWhereUniqueInput!): Contacto
  contactos(where: ContactoWhereInput! = {}, orderBy: [ContactoOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ContactoWhereUniqueInput): [Contacto!]
  contactosCount(where: ContactoWhereInput! = {}): Int
  documento(where: DocumentoWhereUniqueInput!): Documento
  documentos(where: DocumentoWhereInput! = {}, orderBy: [DocumentoOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: DocumentoWhereUniqueInput): [Documento!]
  documentosCount(where: DocumentoWhereInput! = {}): Int
  edificio(where: EdificioWhereUniqueInput!): Edificio
  edificios(where: EdificioWhereInput! = {}, orderBy: [EdificioOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: EdificioWhereUniqueInput): [Edificio!]
  edificiosCount(where: EdificioWhereInput! = {}): Int
  elemento(where: ElementoWhereUniqueInput!): Elemento
  elementos(where: ElementoWhereInput! = {}, orderBy: [ElementoOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ElementoWhereUniqueInput): [Elemento!]
  elementosCount(where: ElementoWhereInput! = {}): Int
  empresa(where: EmpresaWhereUniqueInput!): Empresa
  empresas(where: EmpresaWhereInput! = {}, orderBy: [EmpresaOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: EmpresaWhereUniqueInput): [Empresa!]
  empresasCount(where: EmpresaWhereInput! = {}): Int
  imagen(where: ImagenWhereUniqueInput!): Imagen
  imagens(where: ImagenWhereInput! = {}, orderBy: [ImagenOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ImagenWhereUniqueInput): [Imagen!]
  imagensCount(where: ImagenWhereInput! = {}): Int
  manual(where: ManualWhereUniqueInput!): Manual
  manuals(where: ManualWhereInput! = {}, orderBy: [ManualOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ManualWhereUniqueInput): [Manual!]
  manualsCount(where: ManualWhereInput! = {}): Int
  marca(where: MarcaWhereUniqueInput!): Marca
  marcas(where: MarcaWhereInput! = {}, orderBy: [MarcaOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: MarcaWhereUniqueInput): [Marca!]
  marcasCount(where: MarcaWhereInput! = {}): Int
  instalacion(where: InstalacionWhereUniqueInput!): Instalacion
  instalacions(where: InstalacionWhereInput! = {}, orderBy: [InstalacionOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: InstalacionWhereUniqueInput): [Instalacion!]
  instalacionsCount(where: InstalacionWhereInput! = {}): Int
  contraincendio(where: ContraincendioWhereUniqueInput!): Contraincendio
  contraincendios(where: ContraincendioWhereInput! = {}, orderBy: [ContraincendioOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ContraincendioWhereUniqueInput): [Contraincendio!]
  contraincendiosCount(where: ContraincendioWhereInput! = {}): Int
  inst_Otro(where: Inst_OtroWhereUniqueInput!): Inst_Otro
  instOtros(where: Inst_OtroWhereInput! = {}, orderBy: [Inst_OtroOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: Inst_OtroWhereUniqueInput): [Inst_Otro!]
  instOtrosCount(where: Inst_OtroWhereInput! = {}): Int
  reparacion(where: ReparacionWhereUniqueInput!): Reparacion
  reparacions(where: ReparacionWhereInput! = {}, orderBy: [ReparacionOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ReparacionWhereUniqueInput): [Reparacion!]
  reparacionsCount(where: ReparacionWhereInput! = {}): Int
  producto(where: ProductoWhereUniqueInput!): Producto
  productos(where: ProductoWhereInput! = {}, orderBy: [ProductoOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ProductoWhereUniqueInput): [Producto!]
  productosCount(where: ProductoWhereInput! = {}): Int
  rol(where: RolWhereUniqueInput!): Rol
  rols(where: RolWhereInput! = {}, orderBy: [RolOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: RolWhereUniqueInput): [Rol!]
  rolsCount(where: RolWhereInput! = {}): Int
  subcategoria(where: SubcategoriaWhereUniqueInput!): Subcategoria
  subcategorias(where: SubcategoriaWhereInput! = {}, orderBy: [SubcategoriaOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: SubcategoriaWhereUniqueInput): [Subcategoria!]
  subcategoriasCount(where: SubcategoriaWhereInput! = {}): Int
  telefonillo(where: TelefonilloWhereUniqueInput!): Telefonillo
  telefonillos(where: TelefonilloWhereInput! = {}, orderBy: [TelefonilloOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TelefonilloWhereUniqueInput): [Telefonillo!]
  telefonillosCount(where: TelefonilloWhereInput! = {}): Int
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  usersCount(where: UserWhereInput! = {}): Int
  aviso(where: AvisoWhereUniqueInput!): Aviso
  avisos(where: AvisoWhereInput! = {}, orderBy: [AvisoOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AvisoWhereUniqueInput): [Aviso!]
  avisosCount(where: AvisoWhereInput! = {}): Int
  history(where: HistoryWhereUniqueInput!): History
  histories(where: HistoryWhereInput! = {}, orderBy: [HistoryOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: HistoryWhereUniqueInput): [History!]
  historiesCount(where: HistoryWhereInput! = {}): Int
  adjunto(where: AdjuntoWhereUniqueInput!): Adjunto
  adjuntos(where: AdjuntoWhereInput! = {}, orderBy: [AdjuntoOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AdjuntoWhereUniqueInput): [Adjunto!]
  adjuntosCount(where: AdjuntoWhereInput! = {}): Int
  profile(where: ProfileWhereUniqueInput!): Profile
  profiles(where: ProfileWhereInput! = {}, orderBy: [ProfileOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ProfileWhereUniqueInput): [Profile!]
  profilesCount(where: ProfileWhereInput! = {}): Int
  edificioComment(where: EdificioCommentWhereUniqueInput!): EdificioComment
  edificioComments(where: EdificioCommentWhereInput! = {}, orderBy: [EdificioCommentOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: EdificioCommentWhereUniqueInput): [EdificioComment!]
  edificioCommentsCount(where: EdificioCommentWhereInput! = {}): Int
  avisoComment(where: AvisoCommentWhereUniqueInput!): AvisoComment
  avisoComments(where: AvisoCommentWhereInput! = {}, orderBy: [AvisoCommentOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AvisoCommentWhereUniqueInput): [AvisoComment!]
  avisoCommentsCount(where: AvisoCommentWhereInput! = {}): Int
  elementoComment(where: ElementoCommentWhereUniqueInput!): ElementoComment
  elementoComments(where: ElementoCommentWhereInput! = {}, orderBy: [ElementoCommentOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ElementoCommentWhereUniqueInput): [ElementoComment!]
  elementoCommentsCount(where: ElementoCommentWhereInput! = {}): Int
  instalacionComment(where: InstalacionCommentWhereUniqueInput!): InstalacionComment
  instalacionComments(where: InstalacionCommentWhereInput! = {}, orderBy: [InstalacionCommentOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: InstalacionCommentWhereUniqueInput): [InstalacionComment!]
  instalacionCommentsCount(where: InstalacionCommentWhereInput! = {}): Int
  subcription(where: SubcriptionWhereUniqueInput!): Subcription
  subcriptions(where: SubcriptionWhereInput! = {}, orderBy: [SubcriptionOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: SubcriptionWhereUniqueInput): [Subcription!]
  subcriptionsCount(where: SubcriptionWhereInput! = {}): Int
  subscriptionEmpresa(where: SubscriptionEmpresaWhereUniqueInput!): SubscriptionEmpresa
  subscriptionEmpresas(where: SubscriptionEmpresaWhereInput! = {}, orderBy: [SubscriptionEmpresaOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: SubscriptionEmpresaWhereUniqueInput): [SubscriptionEmpresa!]
  subscriptionEmpresasCount(where: SubscriptionEmpresaWhereInput! = {}): Int
  config(where: ConfigWhereUniqueInput!): Config
  configs(where: ConfigWhereInput! = {}, orderBy: [ConfigOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ConfigWhereUniqueInput): [Config!]
  configsCount(where: ConfigWhereInput! = {}): Int
  keystone: KeystoneMeta!
  authenticatedItem: AuthenticatedItem
}

union AuthenticatedItem = User

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  graphql: KeystoneAdminUIGraphQL!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
  isSingleton: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  isNonNull: [KeystoneAdminUIFieldMetaIsNonNull!]
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

enum KeystoneAdminUIFieldMetaIsNonNull {
  read
  create
  update
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUIGraphQL {
  names: KeystoneAdminUIGraphQLNames!
}

type KeystoneAdminUIGraphQLNames {
  outputTypeName: String!
  whereInputName: String!
  whereUniqueInputName: String!
  createInputName: String!
  createMutationName: String!
  createManyMutationName: String!
  relateToOneForCreateInputName: String!
  relateToManyForCreateInputName: String!
  itemQueryName: String!
  listOrderName: String!
  listQueryCountName: String!
  listQueryName: String!
  updateInputName: String!
  updateMutationName: String!
  updateManyInputName: String!
  updateManyMutationName: String!
  relateToOneForUpdateInputName: String!
  relateToManyForUpdateInputName: String!
  deleteMutationName: String!
  deleteManyMutationName: String!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
